name: Integration test - MatFlow, BASH, macos

env:
  APP_NAME: "matflow"
  INSTALL_ROOT: "~/Library/Application\\ Support"

on:
  workflow_dispatch:
  pull_request:
    types: [opened, edited, synchronize]
    branches: [main, develop]

jobs:

  get-branch-name:
    runs-on: ubuntu-latest

    steps:
      - name: Get and store current branch name dispatch
        if: ${{ github.event_name == 'workflow_dispatch' }}
        id: parse_branch_name_wd
        run: |
          branch_name="${GITHUB_REF#refs/heads/}"
          echo "BRANCH_NAME=$branch_name" >> "$GITHUB_OUTPUT"

      - name: Get and store current branch name pull request
        if: ${{ github.event_name == 'pull_request' }}
        id: parse_branch_name_pr
        run: |
          branch_name="${GITHUB_HEAD_REF#refs/heads/}"
          echo "BRANCH_NAME=$branch_name" >> "$GITHUB_OUTPUT"

    outputs:
      branch_name_wd: ${{ steps.parse_branch_name_wd.outputs.branch_name }}
      branch_name_pr: ${{ steps.parse_branch_name_pr.outputs.branch_name }}

  int-test-script-bash-macos-default:
    runs-on: macos-latest
    needs: get-branch-name

    steps:

      - name: Get branch name (WD)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: echo "BRANCH_NAME=${{ needs.get-branch-name.outputs.branch_name_wd }}" >> $GITHUB_ENV

      - name: Get branch name (PR)
        if: ${{ github.event_name == 'pull_request' }}
        run: echo "BRANCH_NAME=${{ needs.get-branch-name.outputs.branch_name_pr }}" >> $GITHUB_ENV

      - name: Run script
        run: |
          script_output=`(touch tmp.sh && curl -fsSL https://raw.githubusercontent.com/hpcflow/install-scripts/${{ env.BRANCH_NAME }}/src/install-matflow.sh > tmp.sh && bash tmp.sh --prerelease --path --onefile) ; rm tmp.sh`
          artifact_name=`echo $script_output | grep matflow- | cut -d " " -f 29`
          echo "ART_NAME=$artifact_name" >> $GITHUB_ENV

      - name: Run Matflow test suite
        run: |
          ${{ env.INSTALL_ROOT }}/${{ env.APP_NAME }}/links/${{ env.ART_NAME }} test

      - name: Cleanup
        run: rm -r ${{ env.INSTALL_ROOT }}/${{ env.APP_NAME }}

  int-test-script-bash-macos-prerelease-univlink:
    runs-on: macos-latest
    needs: get-branch-name

    steps:

      - name: Get branch name (WD)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: echo "BRANCH_NAME=${{ needs.get-branch-name.outputs.branch_name_wd }}" >> $GITHUB_ENV

      - name: Get branch name (PR)
        if: ${{ github.event_name == 'pull_request' }}
        run: echo "BRANCH_NAME=${{ needs.get-branch-name.outputs.branch_name_pr }}" >> $GITHUB_ENV

      - name: Run script
        run: |
          script_output=`(touch tmp.sh && curl -fsSL https://raw.githubusercontent.com/hpcflow/install-scripts/${{ env.BRANCH_NAME }}/src/install-matflow.sh > tmp.sh && bash tmp.sh --prerelease --path --onefile --univlink) ; rm tmp.sh`
          echo "ART_NAME_UNIV=matflow-dev" >> $GITHUB_ENV

      - name: Run Matflow test suite
        run: |
          ${{ env.INSTALL_ROOT }}/${{ env.APP_NAME }}/links/${{ env.ART_NAME_UNIV }} test

      - name: Cleanup
        run: rm -r ${{ env.INSTALL_ROOT }}/${{ env.APP_NAME }}

    

