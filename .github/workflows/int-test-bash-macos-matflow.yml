name: Integration test - MatFlow, BASH, macos

env:
  APP_NAME: "matflow"
  INSTALL_ROOT: "~/Library/Application\\ Support"

on:
  workflow_dispatch:
  pull_request:
    types: [opened, edited, synchronize]
    branches: [main, develop]

jobs:
  int-test-script-bash-macos-default:
    runs-on: macos-latest

    steps:

      - name: Run script
        run: |
          script_output=`(touch tmp.sh && curl -fsSL https://raw.githubusercontent.com/hpcflow/install-scripts/main/src/install-matflow.sh > tmp.sh && bash tmp.sh --prerelease --path --onefile) ; rm tmp.sh`
          artifact_name=`echo $script_output | grep matflow- | cut -d " " -f 30`
          echo "ART_NAME=$artifact_name" >> $GITHUB_ENV

      - name: Run Matflow test suite
        run: |
          ${{ env.INSTALL_ROOT }}/${{ env.APP_NAME }}/links/${{ env.ART_NAME }} test

      - name: Cleanup
        run: rm -r ${{ env.INSTALL_ROOT }}/${{ env.APP_NAME }}

  int-test-script-bash-macos-prerelease-univlink:
    runs-on: macos-latest

    steps:

      - name: Run script
        run: |
          script_output=`(touch tmp.sh && curl -fsSL https://raw.githubusercontent.com/hpcflow/install-scripts/main/src/install-matflow.sh > tmp.sh && bash tmp.sh --prerelease --path --onefile --univlink) ; rm tmp.sh`
          echo "ART_NAME_UNIV=matflow-dev" >> $GITHUB_ENV

      - name: Run Matflow test suite
        run: |
          ${{ env.INSTALL_ROOT }}/${{ env.APP_NAME }}/links/${{ env.ART_NAME_UNIV }} test

      - name: Cleanup
        run: rm -r ${{ env.INSTALL_ROOT }}/${{ env.APP_NAME }}

    

