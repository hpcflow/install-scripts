name: Integration test - HPCFlow, powershell, Windows

env:
  APP_NAME: "matflow"
  INSTALL_ROOT: "${env:USERPROFILE}\\AppData\\Local\\hpcflow"

on:
  workflow_dispatch:  
  pull_request:
    types: [opened, edited, synchronize]
    branches: [main, develop]

jobs:

  get-branch-name:
    runs-on: ubuntu-latest

    steps:
      - name: Get and store current branch name
        id: parse_branch_name
        run: |
          branch_name="${GITHUB_REF#refs/heads/}"
          echo "BRANCH_NAME=$branch_name" >> "$GITHUB_OUTPUT"

    outputs:
      branch_name: ${{ steps.parse_branch_name.outputs.branch_name }}

  int-test-script-powershell-windows:
    runs-on: windows-latest
    needs: get-branch-name

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Run script
        id: run-script
        run: |
          $ScriptOutput = & $([scriptblock]::Create((New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/hpcflow/install-scripts/${{ needs.get-branch-name.outputs.branch_name }}/src/install-hpcflow.ps1'))) -PreRelease -OneFile 6>&1
          Write-Host $ScriptOutput
          $ScriptOutputSplit = $ScriptOutput -Split " "
          $artifact_name = $ScriptOutputSplit[15]
          echo "ART_NAME=$artifact_name" >> $env:GITHUB_ENV

      - name: Check results
        run: |
          $app_path = "${{ env.INSTALL_ROOT }}\\${{ env.ART_NAME }} test"
          Invoke-Expression -Command $app_path

      - name: Cleanup
        run: |
          Remove-Item ${{ env.INSTALL_ROOT }} -Recurse

  int-test-script-powershell-windows-prerelease-univlink:
    runs-on: windows-latest
    needs: get-branch-name

    steps:

      - name: Run script
        id: run-script
        run: |
          $ScriptOutput = & $([scriptblock]::Create((New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/hpcflow/install-scripts/${{ needs.get-branch-name.outputs.branch_name }}/src/install-hpcflow.ps1'))) -PreRelease -OneFile -UnivLink 6>&1
          echo "ART_NAME_UNIV=hpcflow-dev" >> $env:GITHUB_ENV

      - name: Check results
        run: |
          $app_path = "${{ env.ART_NAME_UNIV }} test"
          Invoke-Expression -Command $app_path
          
      - name: Cleanup
        run: |
          Remove-Item ${{ env.INSTALL_ROOT }} -Recurse